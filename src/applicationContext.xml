<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	  	  
	  
	 <!-- 引入配置文件 -->
	
	 <!-- 配置DataSource -->
	 <bean id="dataSource" 
	       class="org.apache.commons.dbcp.BasicDataSource"
	       destroy-method="close">
	 	<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	 	<!-- 指明连接数据库使用编码是utf-8防止乱码  &属于特殊字符不可以直接写用“&amp;”代替 -->
	 	<property name="url" value="jdbc:mysql://localhost:3306/cloud_note?useUnicode=true&amp;characterEncoding=utf8"/>
	 	<property name="username" value="root"/>
	 	<property name="password" value="root"/>
	 </bean>
	 
	 <!-- 定义SqlSessionFactoryBean 将myBatis中的主配置文件
	      的重要参数引入spring文件 -->
	 <bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<!-- 注入连接信息 -->
	 	<property name="dataSource" ref="dataSource"/>
	 	<!-- 注入SQL定义文件信息，若是多个sql文件，可以*代替-->
	 	<property name="mapperLocations" value="classpath:org/ks/note/sql/*.xml"/>
	 </bean>
	 
	 
	<!-- 使用MapperScannerConfigurer扫描指定的接口包 -->
	<!-- 按指定包扫描接口，批量生成接口的实现类，采用接口名首字母
	     小写作为实现类实例的id -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.ks.note.dao"/>
	
	</bean>
	
	 <!-- 1.开启组件扫描，扫描指定的包及子包下的组件 -->
	  <context:component-scan base-package="org.ks.note"/>
	  
	  <!-- 2.开启RequestMapping , 相当于配置了handlerMapping
	     3.1之后的版本-->
	  <mvc:annotation-driven/>
	  
	  <!-- 配置视图解析器，负责将视图名解析成具体视图技术，比如解析成jsp -->
	  <bean id="viewResolver"
	        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        	<property name="prefix" value="/WEB-INF/"/>
	        	<property name="suffix" value=".jsp"/>
	  </bean>
	
</beans>